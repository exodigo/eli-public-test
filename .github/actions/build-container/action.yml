name: 'build-container'
description: 'Build and publish a basic container'

inputs:
  container_alias:
    description: The alias of the container
    required: true
  tags:
    description: Tags to generate container names for
    default: ""
  container_file:
    description: Name of the file to use for build
    default: "Containerfile"
  working-directory:
    description: Working directory during build
    default: "."
  container_input:
    description: Input for Containerfile
    default: ""
  publish:
    description: Whether or not to publish the container (The temporary tag is published regardless)
    default: "true"
outputs:
  container_name:
    description: The name of the created container
    value: ${{ steps.build.outputs.container_name }}
  public_container_names:
    description: Additional names created for the container
    value: ${{ steps.names.outputs.public_container_names }}

runs:
  using: "composite"
  steps:
    - name: set.exodigo-containers-actions
      shell: sh
      run: |
        . "${{ github.action_path }}/../.action"
        if ! [ -d "${action_repo}" ]; then
          ln -sfn "${{ github.action_path }}/.." "${action_repo}"
        fi

    - name: container.build
      id: build
      shell: sh
      working-directory: ${{ inputs.working-directory }}
      env:
        OCI_CONTAINER_FILE: ${{ inputs.container_file }}
      run: |
        container_name="${AWS_ECR_NAME}/${AWS_ECR_CI_REPOSITORY_NAME}/${AWS_ECR_CI_TEMPORARY_REPOSITORY}:temp-${GITHUB_RUN_ID}-${GITHUB_RUN_NUMBER}-$(date -u +%s)"
        eval "${{ inputs.container_input }}"
        OCI_ARG_LOCAL_TAG="--tag=${container_name}"
        for x in $(set | sed -n -e 's/^\(OCI_ARG_[^=]*\)=.*/\1/ p'); do
          eval "export ${x}"
        done
        "${{ github.action_path }}/build-container.sh"
        cat >> "${GITHUB_OUTPUT}" << __EOF__
        container_name=${container_name}
        __EOF__

    - name: generate.names
      id: names
      uses: ./exodigo-containers-actions/generate-container-names
      with:
        container_alias: ${{ inputs.container_alias }}
        tags: ${{ inputs.tags }}

    - name: prepare.final.names
      id: final_names
      shell: sh
      run: |
        final_public_container_names="${{ steps.build.outputs.container_name }}"
        if [ "${{ inputs.publish }}" = "true" ]; then
          final_public_container_names="${final_public_container_names} ${{ steps.names.outputs.public_container_names }}"
        fi
        cat >> "${GITHUB_OUTPUT}" << __EOF__
        final_public_container_names=${final_public_container_names}
        __EOF__

    - name: container.publish.all
      uses: ./exodigo-containers-actions/push-container
      with:
        container_name: ${{ steps.build.outputs.container_name }}
        public_container_names: ${{ steps.final_names.outputs.final_public_container_names }}
