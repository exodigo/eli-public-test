name: 'build-container'
description: 'Build and publish container'

inputs:
  container_tags:
    description: The container tags to publish
    required: true
  container_input:
    description: Input for Containerfile
    default: ""

runs:
  using: "composite"
  steps:
    - name: config.aws
      uses: aws-actions/configure-aws-credentials@v1-node16
      with:
        aws-region: ${{ env.AWS_ROLE_REGION }}
        role-to-assume: ${{ env.AWS_ROLE_ARN }}
        mask-aws-account-id: 'no'

    - name: config.tools
      shell: sh
      run: |
        for tool in pip twine npm; do
          aws codeartifact login \
              --region "${AWS_CODEARTIFACT_REGION}" \
              --domain exodigo-ci \
              --repository exodigo-ci \
              --tool "${tool}"
        done
        pip config set global.extra-index-url https://pypi.python.org/simple/

    - name: extract.oidc
      uses: exodigo/exodigo_github-action-oidc@v1
      id: oidc

    - name: checkout.container-ci
      uses: actions/checkout@v3
      with:
        path: container-ci
        repository: ${{ steps.oidc.outputs.job_workflow_repo_name_and_owner }}
        ref: ${{ steps.oidc.outputs.job_workflow_repo_ref }}

    - name: container.build
      shell: sh
      env:
        OCI_ENGINE: podman
        OCI_LOCAL_TAG: "localhost/container:tmp"
      run: |
        eval "${{ inputs.container_input }}"
        ./container-ci/build-container.sh

    - name: container.publish
      shell: sh
      env:
        OCI_ENGINE: podman
        OCI_LOCAL_TAG: "localhost/container:tmp"
      run: |
        aws ecr get-login-password --region "${AWS_ROLE_REGION}" | podman login --username AWS --password-stdin "${AWS_ECR_NAME}"
        container_tags="${{ inputs.container_tags }}"
        for container_tag in ${container_tags}; do
          ${OCI_ENGINE} tag "${OCI_LOCAL_TAG}" "${container_tag}"
          ${OCI_ENGINE} push "${container_tag}"
        done

